import streamlit as st
import google.generativeai as palm
from dotenv import load_dotenv
import os
import pyttsx3
import speech_recognition as sr
# import time
import wikipedia
import datetime
# import webbrowser
import requests
# from selenium import webdriver
# from webdriver_manager.chrome import ChromeDriverManager
from time import strftime
# from gtts import gTTS
# from youtube_search import YoutubeSearch
load_dotenv()
API_KEY=os.environ.get("PALM_API_KEY")
palm.configure(api_key=API_KEY)
# Khai b√°o c√°c bi·∫øn cho qu√° tr√¨nh l√†m tr·ª£ l√Ω ·∫£o
wikipedia.set_lang('vi')
language = 'vi'
# path = ChromeDriverManager().install()
st.header(":mailbox: Tr·ª£ L√Ω ·∫¢o C·ªßa S·ª∏ PRO üôâ üôÅ üòù")
contact_form = """
<h2>Xin ch√†o! T√¥i l√† matinh, tr·ª£ l√Ω ·∫£o c·ªßa b·∫°n. H√£y nh·∫≠p l·ªánh b·∫°n mu·ªën t√¥i th·ª±c hi·ªán:</h2>
<h3>Xin ch√†o, b·∫°n t√™n l√† g√¨ nh·ªâ?</h3>
"""
st.markdown(contact_form, unsafe_allow_html=True)
# Text - to - speech: Chuy·ªÉn ƒë·ªïi vƒÉn b·∫£n th√†nh gi·ªçng n√≥i
def GPT():
    # st.image("./Google_PaLM_Logo.svg.webp", use_column_width=False, width=100)
    st.header("Chat with GPT")
    st.write("")
    prompt = st.text_input("M√≤i nh·∫≠p",placeholder="b·∫°n c√≥ th·ªÉ nh·∫≠p b·∫•t k√¨ g√¨ b·∫±ng ti·∫øng anh", label_visibility="visible")
    # temp = st.slider("Temperature", 0.0, 1.0, step=0.05)    #Hyper parameter - range[0-1]
    if st.button("NH·∫¨P V√ÄO", use_container_width=True):
        model = "models/text-bison-001"    #This is the only model currently available
        response = palm.generate_text(
            model=model,
            prompt=prompt,
            # temperature=temp,
            max_output_tokens=20000
        )

        st.write("")
        st.header(":blue[TR·∫¢ L·ªúI]")
        st.write("")

        st.markdown(response.result, unsafe_allow_html=False, help=None)
def speak(text):
    engine = pyttsx3.init()
    voices = engine.getProperty('voices')
    rate = engine.getProperty('rate')
    volume = engine.getProperty('volume')
    engine.setProperty('volume', volume - 0.0)  # tu 0.0 -> 1.0
    engine.setProperty('rate', rate - 50)
    engine.setProperty('voice', voices[1].id)
    engine.say(text)
    engine.runAndWait()
def assistant():
    name = st.text_input("T√™n b·∫°n",placeholder="M·ªùi b·∫°n nh·∫≠p t√™n:",label_visibility="visible")
    if name:
        st.write(f"Ch√†o b·∫°n {name}")
        st.write("B·∫°n c·∫ßn Bot matinh c√≥ th·ªÉ gi√∫p g√¨ ·∫°?")
        contact = """<h6>Bot ch·ªâ gi√∫p b·∫°n khi b·∫°n nh·∫≠p ƒë√∫ng c√¢u l·ªánh sau v√†o khung nh·∫≠p l·ªánh c·ªßa b·∫°n</h6>
<h6>1.ch√†o</h6>
<h6>2.gi·ªù</h6>
<h6>3.ng√†y</h6>
<h6>4.th·ªùi ti·∫øt</h6>
<h6>5.ch∆°i nh·∫°c</h6>
<h6>6.m·ªü google v√† t√¨m ki·∫øm</h6>
<h6>7.b√°ch khoa to√†n th∆∞</h6>
<h6>8.gi·ªõi thi·ªáu</h6>
<h6>9.c√≥ th·ªÉ l√†m g√¨</h6>
<h6>10.GPT</h6>
<h6>11.d·ª´ng</h6>
<h4>Ghi ch√∫ : GPT ch·ªâ c√≥ th·ªÉ vi·∫øt b·∫±ng ti·∫øng anh,ti·∫øng vi·ªát ch∆∞a h·ªó tr·ª£</h4>
"""
        st.markdown(contact, unsafe_allow_html=True)
        command = st.text_input("Nh·∫≠p l·ªánh c·ªßa b·∫°n",placeholder="Nh·∫≠p l·ªánh c·ªßa b·∫°n:",label_visibility="visible")
        if command:
            if "d·ª´ng" in command or "t·∫°m bi·ªát" in command or "ch√†o robot" in command or "ng·ªß th√¥i" in command:
                st.write("H·∫πn g·∫∑p l·∫°i b·∫°n sau!")
            elif "c√≥ th·ªÉ l√†m g√¨" in command:
                help_me()
            elif "ch√†o" in command:
                hello(name)
            elif "gi·ªù" in command or "ng√†y" in command:
                get_time(command)
            # elif 'm·ªü google v√† t√¨m ki·∫øm' in command:
            #     # open_google_and_search(command)
            elif "th·ªùi ti·∫øt" in command:
                current_weather()
            # elif "ch∆°i nh·∫°c" in command:
            #     play_song()     
            elif "b√°ch khoa to√†n th∆∞" in command:
                tell_me_about()
            elif "gi·ªõi thi·ªáu" in command:
                introduce()
            elif "GPT" in command:   
                GPT() 

def help_me():
  contact1 = """<h6>Bot c√≥ th·ªÉ gi√∫p b·∫°n th·ª±c hi·ªán c√°c c√¢u l·ªánh sau ƒë√¢y:</h6>
<h6>1.Ch√†o h·ªèi</h6>
<h6>2.Hi·ªÉn th·ªã gi·ªù</h6>
<h6>3.Hi·ªÉn th·ªã ng√†y</h6>
<h6>4.T√¨m ki·∫øm tr√™n Google</h6>
<h6>5.ch∆°i nh·∫°c</h6>
<h6>6.D·ª± b√°o th·ªùi ti·∫øt</h6>
<h6>7.K·ªÉ b·∫°n bi·∫øt v·ªÅ th·∫ø gi·ªõi</h6>
<h6>8.CHAT GPT</h6>
"""
  st.markdown(contact1, unsafe_allow_html=True)

def hello(name):
    day_time = int(strftime('%H'))
    if day_time < 12:
        speak(f"Ch√†o bu·ªïi s√°ng b·∫°n {name}. Ch√∫c b·∫°n m·ªôt ng√†y t·ªët l√†nh.")
        st.write(f"Ch√†o bu·ªïi s√°ng b·∫°n {name}. Ch√∫c b·∫°n m·ªôt ng√†y t·ªët l√†nh.")
    elif 12 <= day_time < 18:
        speak(f"Ch√†o bu·ªïi chi·ªÅu b·∫°n {name}. B·∫°n ƒë√£ d·ª± ƒë·ªãnh g√¨ cho chi·ªÅu nay ch∆∞a.")
        st.write(f"Ch√†o bu·ªïi chi·ªÅu b·∫°n {name}. B·∫°n ƒë√£ d·ª± ƒë·ªãnh g√¨ cho chi·ªÅu nay ch∆∞a.")
    else:
        speak(f"Ch√†o bu·ªïi t·ªëi b·∫°n {name}. B·∫°n ƒë√£ ƒÉn t·ªëi ch∆∞a nh·ªâ.")
        st.write(f"Ch√†o bu·ªïi t·ªëi b·∫°n {name}. B·∫°n ƒë√£ ƒÉn t·ªëi ch∆∞a nh·ªâ.")

def get_time(text):
    now = datetime.datetime.now()
    if "gi·ªù" in text:
        speak(f'B√¢y gi·ªù l√† {now.hour} gi·ªù {now.minute} ph√∫t {now.second} gi√¢y')
        st.write(f'B√¢y gi·ªù l√† {now.hour} gi·ªù {now.minute} ph√∫t {now.second} gi√¢y')
    elif "ng√†y" in text:
        speak(f"H√¥m nay l√† ng√†y {now.day} th√°ng {now.month} nƒÉm {now.year}")
        st.write(f"H√¥m nay l√† ng√†y {now.day} th√°ng {now.month} nƒÉm {now.year}")
    else:
        speak("Bot ch∆∞a hi·ªÉu √Ω c·ªßa b·∫°n. B·∫°n n√≥i l·∫°i ƒë∆∞·ª£c kh√¥ng?")
        st.write("Bot ch∆∞a hi·ªÉu √Ω c·ªßa b·∫°n. B·∫°n n√≥i l·∫°i ƒë∆∞·ª£c kh√¥ng?")

# def open_google_and_search(text):
#     speak('B·∫°n mu·ªën t√¨m ki·∫øm g√¨')
#     st.write('B·∫°n mu·ªën t√¨m ki·∫øm g√¨')
#     query = st.text_input("Nh·∫≠p t·ª´ kh√≥a",placeholder="Nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm tr√™n Google:",label_visibility="visible")
#     query = query.replace('', '+')
#     if query:
#         browser = webdriver.Chrome()
#         for i in range(1):
#          e = browser.get("https://www.google.com/search?q="+ query + "&start" + str(i))
#         time.sleep(15) 
       

def current_weather():
    speak("B·∫°n mu·ªën xem th·ªùi ti·∫øt ·ªü ƒë√¢u ·∫°.")
    st.write("B·∫°n mu·ªën xem th·ªùi ti·∫øt ·ªü ƒë√¢u ·∫°")
    city = st.text_input("Th√†nh ph·ªë",placeholder="Th√†nh ph·ªë:",label_visibility="visible")
    if city:
        api_key = "fe8d8c65cf345889139d8e545f57819a"
        ow_url = "http://api.openweathermap.org/data/2.5/weather?"
        call_url = ow_url + "appid=" + api_key + "&q=" + city + "&units=metric"
        response = requests.get(call_url)
        data = response.json()
        if data["cod"] != "404":
            city_res = data["main"]
            current_temperature = city_res["temp"]
            current_pressure = city_res["pressure"]
            current_humidity = city_res["humidity"]
            suntime = data["sys"]
            sunrise = datetime.datetime.fromtimestamp(suntime["sunrise"])
            sunset = datetime.datetime.fromtimestamp(suntime["sunset"])
            wthr = data["weather"]
            weather_description = wthr[0]["description"]
            now = datetime.datetime.now()
            content = f"""
            H√¥m nay l√† ng√†y {now.day} th√°ng {now.month} nƒÉm {now.year}
            M·∫∑t tr·ªùi m·ªçc v√†o {sunrise.hour} gi·ªù {sunrise.minute} ph√∫t
            M·∫∑t tr·ªùi l·∫∑n v√†o {sunset.hour} gi·ªù {sunset.minute} ph√∫t
            Nhi·ªát ƒë·ªô trung b√¨nh l√† {current_temperature} ƒë·ªô C
            √Åp su·∫•t kh√¥ng kh√≠ l√† {current_pressure} h√©c t∆° Pascal
            ƒê·ªô ·∫©m l√† {current_humidity}%
            Tr·ªùi h√¥m nay quang m√¢y. D·ª± b√°o m∆∞a r·∫£i r√°c ·ªü m·ªôt s·ªë n∆°i."""
            speak(content)
            st.write(content)
        else:
            speak("Kh√¥ng t√¨m th·∫•y ƒë·ªãa ch·ªâ c·ªßa b·∫°n")

# def play_song():
#     speak('Xin m·ªùi b·∫°n ch·ªçn t√™n b√†i h√°t')
#     mysong = st.text_input("T√™n b√†i h√°t",placeholder="T√™n b√†i h√°t:",label_visibility="visible")
#     if mysong:
#         result = YoutubeSearch(mysong, max_results=10).to_dict()
#         url = 'https://www.youtube.com' + result[0]['url_suffix']
#         webbrowser.open(url)
#         speak("B√†i h√°t b·∫°n y√™u c·∫ßu ƒë√£ ƒë∆∞·ª£c m·ªü.")


def tell_me_about():
    try:
        st.write("B·∫°n c·∫ßn Bot ƒë·ªçc g√¨ ·∫°")
        text = st.text_input("Ch·ªß ƒë·ªÅ",placeholder="Ch·ªß ƒë·ªÅ:",label_visibility="visible")
        contents = wikipedia.summary(text).split('\n')
        speak(contents[0])
        st.write(contents[0])
        for content in contents[1:]:
            # speak("B·∫°n mu·ªën nghe th√™m kh√¥ng?")
            ans = st.text_input("Tr·∫£ l·ªùi",placeholder="Tr·∫£ l·ªùi (c√≥/kh√¥ng) bot ƒë·ªçc ti·∫øp:",label_visibility="visible")
            if 'c√≥' not in ans:
                break
            speak(content)
            st.write(content)
        speak('C·∫£m ∆°n b·∫°n ƒë√£ l·∫Øng nghe!!!')
    except:
        speak("Bot  ƒë·ªãnh nghƒ©a ƒë∆∞·ª£c thu·∫≠t ng·ªØ c·ªßa b·∫°n. B·∫°n nh·∫≠p v√†o ch·ªß ƒë·ªÅ ƒë∆∞·ª£c kh√¥ng?")

def introduce():
    speak("Xin ch√†o m·ªçi ng∆∞·ªùi. M√¨nh l√† tr·ª£ l√Ω ·∫£o AI do L√ä T√ôNG S·ª∏ t·∫°o ra. M√¨nh c√≥ th·ªÉ gi√∫p b·∫°n l√†m nhi·ªÅu vi·ªác l·∫Øm ƒë√≥. B·∫°n c√≥ mu·ªën t√¨m hi·ªÉu kh√¥ng?")
    st.write("Xin ch√†o m·ªçi ng∆∞·ªùi. M√¨nh l√† tr·ª£ l√Ω ·∫£o AI do L√ä T√ôNG S·ª∏ t·∫°o ra. M√¨nh c√≥ th·ªÉ gi√∫p b·∫°n l√†m nhi·ªÅu vi·ªác l·∫Øm ƒë√≥. B·∫°n c√≥ mu·ªën t√¨m hi·ªÉu kh√¥ng")
if __name__ == "__main__":
    assistant()
